//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFlyService")]
    public interface IFlyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlyService/Fly", ReplyAction="http://tempuri.org/IFlyService/FlyResponse")]
        string Fly(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlyService/Fly", ReplyAction="http://tempuri.org/IFlyService/FlyResponse")]
        System.Threading.Tasks.Task<string> FlyAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlyService/MyFly", ReplyAction="http://tempuri.org/IFlyService/MyFlyResponse")]
        string MyFly();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlyService/MyFly", ReplyAction="http://tempuri.org/IFlyService/MyFlyResponse")]
        System.Threading.Tasks.Task<string> MyFlyAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlyServiceChannel : ConsoleApplication2.ServiceReference1.IFlyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlyServiceClient : System.ServiceModel.ClientBase<ConsoleApplication2.ServiceReference1.IFlyService>, ConsoleApplication2.ServiceReference1.IFlyService {
        
        public FlyServiceClient() {
        }
        
        public FlyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Fly(string message) {
            return base.Channel.Fly(message);
        }
        
        public System.Threading.Tasks.Task<string> FlyAsync(string message) {
            return base.Channel.FlyAsync(message);
        }
        
        public string MyFly() {
            return base.Channel.MyFly();
        }
        
        public System.Threading.Tasks.Task<string> MyFlyAsync() {
            return base.Channel.MyFlyAsync();
        }
    }
}
